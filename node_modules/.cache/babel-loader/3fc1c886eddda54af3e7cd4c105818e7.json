{"ast":null,"code":"import _classCallCheck from \"/Users/v000770/Documents/Project/random-quote/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/v000770/Documents/Project/random-quote/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/v000770/Documents/Project/random-quote/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/v000770/Documents/Project/random-quote/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/v000770/Documents/Project/random-quote/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/v000770/Documents/Project/random-quote/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/v000770/Documents/Project/random-quote/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Background from './components/Background/Background';\nimport $ from 'jquery';\n\nfunction getRandomTheme() {\n  var colors = [new Theme('#FF9191', '#FFD4D4', '#B63232'), new Theme('#FFC391', '#FFEBDA', '#B66E32'), new Theme('#7EDD7E', '#CEF1CE', '#289128'), new Theme('#FFDA91', '#FFF3DA', '#B68A32'), new Theme('#579999', '#C2E3E3', '#1E6D6D'), new Theme('#74CC74', '#C2E3E3', '#1E6D6D')];\n  return colors[Math.floor(Math.random() * colors.length)];\n}\n\nfunction Theme(themeColor, panelColor, textColor) {\n  this.themeColor = themeColor;\n  this.panelColor = panelColor;\n  this.textColor = textColor;\n}\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      theme: {\n        themeColor: '#FF9191',\n        panelColor: '#FFD4D4',\n        textColor: '#B63232'\n      },\n      data: {\n        content: \"\",\n        author: \"\"\n      }\n    };\n    _this.changeTheme = _this.changeTheme.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getQuote = _this.getQuote.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"changeTheme\",\n    value: function changeTheme() {\n      var newTheme = getRandomTheme();\n      this.setState({\n        theme: {\n          themeColor: newTheme.themeColor,\n          panelColor: newTheme.panelColor,\n          textColor: newTheme.textColor\n        }\n      });\n    }\n  }, {\n    key: \"getQuote\",\n    value: function getQuote() {\n      var _this2 = this;\n\n      $.ajax({\n        dataType: \"jsonp\",\n        jsonp: \"jsonp\",\n        cache: false,\n        url: \"https://api.forismatic.com/api/1.0/?method=getQuote&lang=en&format=jsonp&jsonp=?\",\n        success: function success(data) {\n          _this2.setQuote(data);\n        }\n      });\n    }\n  }, {\n    key: \"setQuote\",\n    value: function setQuote(data) {\n      var content = data.quoteText.trim();\n      var author = data.quoteAuthor ? data.quoteAuthor.trim() : \"Unknown\";\n      this.setState({\n        data: {\n          content: content,\n          author: author\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Background, {\n        theme: this.state.theme,\n        data: this.state.data,\n        changeTheme: this.changeTheme,\n        getQuote: this.getQuote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/v000770/Documents/Project/random-quote/src/App.js"],"names":["React","Component","Background","$","getRandomTheme","colors","Theme","Math","floor","random","length","themeColor","panelColor","textColor","App","props","state","theme","data","content","author","changeTheme","bind","getQuote","newTheme","setState","ajax","dataType","jsonp","cache","url","success","setQuote","quoteText","trim","quoteAuthor"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Background from './components/Background/Background';\nimport $ from 'jquery';\n\nfunction getRandomTheme() {\n    const colors = [\n        new Theme('#FF9191', '#FFD4D4', '#B63232'),\n        new Theme('#FFC391', '#FFEBDA', '#B66E32'),\n        new Theme('#7EDD7E', '#CEF1CE', '#289128'),\n        new Theme('#FFDA91', '#FFF3DA', '#B68A32'),\n        new Theme('#579999', '#C2E3E3', '#1E6D6D'),\n        new Theme('#74CC74', '#C2E3E3', '#1E6D6D')\n    ];\n    return colors[Math.floor(Math.random() * colors.length)];\n}\n\nfunction Theme(themeColor, panelColor, textColor) {\n    this.themeColor = themeColor;\n    this.panelColor = panelColor;\n    this.textColor = textColor;\n}\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            theme: {\n                themeColor: '#FF9191',\n                panelColor: '#FFD4D4',\n                textColor: '#B63232'\n            },\n            data: {\n                content: \"\",\n                author: \"\"\n            }\n        };\n        this.changeTheme = this.changeTheme.bind(this);\n        this.getQuote = this.getQuote.bind(this);\n    };\n\n    changeTheme() {\n        let newTheme = getRandomTheme();\n        this.setState({\n            theme: {\n                themeColor: newTheme.themeColor,\n                panelColor: newTheme.panelColor,\n                textColor: newTheme.textColor\n            }\n        });\n    };\n\n    getQuote() {\n        $.ajax({\n            dataType: \"jsonp\",\n            jsonp: \"jsonp\",\n            cache: false,\n            url: \"https://api.forismatic.com/api/1.0/?method=getQuote&lang=en&format=jsonp&jsonp=?\",\n            success: data => {\n                this.setQuote(data)\n            }\n        });\n    }\n\n    setQuote(data) {\n        let content = data.quoteText.trim();\n        let author = data.quoteAuthor ? data.quoteAuthor.trim() : \"Unknown\";\n        this.setState({\n            data: {\n                content: content,\n                author: author\n            }\n        });\n    }\n\n    render() {\n        return (\n                <Background\n                    theme={this.state.theme}\n                    data={this.state.data}\n                    changeTheme={this.changeTheme}\n                    getQuote={this.getQuote}\n                />\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}